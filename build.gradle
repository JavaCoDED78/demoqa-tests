plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group 'com.javaded78'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    allureVersion = '2.29.1'
    junitVersion = '5.11.4'
    selenideVersion = '7.7.0'
    slf4jVersion = '2.0.16'
    assertjVersion = '3.27.2'
}

sourceCompatibility = '21'
targetCompatibility = '21'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation("com.codeborne:selenide:${selenideVersion}")
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}")
    testImplementation("org.slf4j:slf4j-simple:${slf4jVersion}")
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    testImplementation "com.codeborne:pdf-test:1.9.1"
    testImplementation "com.codeborne:xls-test:1.7.2"
    testImplementation "com.opencsv:opencsv:5.9"
    testImplementation "com.google.code.gson:gson:2.11.0"
    implementation 'org.apache.poi:poi:5.4.0'


    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
}

test {
    useJUnitPlatform(){}
}
allure {
    version = "${allureVersion}"
    adapter {
        frameworks {
            junit5 {
                enabled = true
                version = "${allureVersion}"
            }
        }
    }
}
